ARM GAS  /tmp/cc1SHIiy.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/main.c"
  19              		.section	.text.MPU_Config,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MPU_Config:
  26              	.LFB154:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** #include <string.h>
  29:Core/Src/main.c **** #include <stdarg.h>
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/cc1SHIiy.s 			page 2


  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** COM_InitTypeDef BspCOMInit;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MPU_Config(void);
  58:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MPU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c ****   MPU_Config();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Core/Src/main.c ****   HAL_Init();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END Init */
  89:Core/Src/main.c **** 
ARM GAS  /tmp/cc1SHIiy.s 			page 3


  90:Core/Src/main.c ****   /* Configure the system clock */
  91:Core/Src/main.c ****   SystemClock_Config();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Initialize all configured peripherals */
  98:Core/Src/main.c ****   MX_GPIO_Init();
  99:Core/Src/main.c ****   MX_USART1_UART_Init();
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 101:Core/Src/main.c ****     myprintf("Starting the freertos program.....\n");
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 106:Core/Src/main.c ****   MX_FREERTOS_Init();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Initialize leds */
 109:Core/Src/main.c ****   BSP_LED_Init(LED_GREEN);
 110:Core/Src/main.c ****   BSP_LED_Init(LED_YELLOW);
 111:Core/Src/main.c ****   BSP_LED_Init(LED_RED);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Initialize USER push-button, will be used to trigger an interrupt each time it's pressed.*/
 114:Core/Src/main.c ****   BSP_PB_Init(BUTTON_USER, BUTTON_MODE_EXTI);
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Initialize COM1 port (115200, 8 bits (7-bit data + 1 stop bit), no parity */
 117:Core/Src/main.c ****   BspCOMInit.BaudRate   = 115200;
 118:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 119:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 120:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 121:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 122:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     Error_Handler();
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Start scheduler */
 128:Core/Src/main.c ****   osKernelStart();
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Infinite loop */
 133:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 134:Core/Src/main.c ****   while (1)
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE END WHILE */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c ****   /* USER CODE END 3 */
 142:Core/Src/main.c **** }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /**
 145:Core/Src/main.c ****   * @brief System Clock Configuration
 146:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/cc1SHIiy.s 			page 4


 147:Core/Src/main.c ****   */
 148:Core/Src/main.c **** void SystemClock_Config(void)
 149:Core/Src/main.c **** {
 150:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 151:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /*AXI clock gating */
 154:Core/Src/main.c ****   RCC->CKGAENR = 0xE003FFFF;
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /** Supply configuration update enable
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_DIRECT_SMPS_SUPPLY);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 167:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 171:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 35;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 191:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****     Error_Handler();
 203:Core/Src/main.c ****   }
ARM GAS  /tmp/cc1SHIiy.s 			page 5


 204:Core/Src/main.c **** }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /* USER CODE END 4 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****  /* MPU Configuration */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** void MPU_Config(void)
 213:Core/Src/main.c **** {
  27              		.loc 1 213 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
 214:Core/Src/main.c ****   MPU_Region_InitTypeDef MPU_InitStruct = {0};
  40              		.loc 1 214 3 view .LVU1
  41              		.loc 1 214 26 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0094     		str	r4, [sp]
  44 0008 0194     		str	r4, [sp, #4]
  45 000a 0294     		str	r4, [sp, #8]
  46 000c 0394     		str	r4, [sp, #12]
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* Disables the MPU */
 217:Core/Src/main.c ****   HAL_MPU_Disable();
  47              		.loc 1 217 3 is_stmt 1 view .LVU3
  48 000e FFF7FEFF 		bl	HAL_MPU_Disable
  49              	.LVL0:
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 220:Core/Src/main.c ****   */
 221:Core/Src/main.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  50              		.loc 1 221 3 view .LVU4
  51              		.loc 1 221 25 is_stmt 0 view .LVU5
  52 0012 0123     		movs	r3, #1
  53 0014 8DF80030 		strb	r3, [sp]
 222:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
  54              		.loc 1 222 3 is_stmt 1 view .LVU6
  55              		.loc 1 222 25 is_stmt 0 view .LVU7
  56 0018 8DF80140 		strb	r4, [sp, #1]
 223:Core/Src/main.c ****   MPU_InitStruct.BaseAddress = 0x0;
  57              		.loc 1 223 3 is_stmt 1 view .LVU8
  58              		.loc 1 223 30 is_stmt 0 view .LVU9
  59 001c 0194     		str	r4, [sp, #4]
 224:Core/Src/main.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
  60              		.loc 1 224 3 is_stmt 1 view .LVU10
  61              		.loc 1 224 23 is_stmt 0 view .LVU11
  62 001e 1F22     		movs	r2, #31
ARM GAS  /tmp/cc1SHIiy.s 			page 6


  63 0020 8DF80820 		strb	r2, [sp, #8]
 225:Core/Src/main.c ****   MPU_InitStruct.SubRegionDisable = 0x87;
  64              		.loc 1 225 3 is_stmt 1 view .LVU12
  65              		.loc 1 225 35 is_stmt 0 view .LVU13
  66 0024 8722     		movs	r2, #135
  67 0026 8DF80920 		strb	r2, [sp, #9]
 226:Core/Src/main.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  68              		.loc 1 226 3 is_stmt 1 view .LVU14
  69              		.loc 1 226 31 is_stmt 0 view .LVU15
  70 002a 8DF80A40 		strb	r4, [sp, #10]
 227:Core/Src/main.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
  71              		.loc 1 227 3 is_stmt 1 view .LVU16
  72              		.loc 1 227 35 is_stmt 0 view .LVU17
  73 002e 8DF80B40 		strb	r4, [sp, #11]
 228:Core/Src/main.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  74              		.loc 1 228 3 is_stmt 1 view .LVU18
  75              		.loc 1 228 30 is_stmt 0 view .LVU19
  76 0032 8DF80C30 		strb	r3, [sp, #12]
 229:Core/Src/main.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
  77              		.loc 1 229 3 is_stmt 1 view .LVU20
  78              		.loc 1 229 30 is_stmt 0 view .LVU21
  79 0036 8DF80D30 		strb	r3, [sp, #13]
 230:Core/Src/main.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  80              		.loc 1 230 3 is_stmt 1 view .LVU22
  81              		.loc 1 230 30 is_stmt 0 view .LVU23
  82 003a 8DF80E40 		strb	r4, [sp, #14]
 231:Core/Src/main.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
  83              		.loc 1 231 3 is_stmt 1 view .LVU24
  84              		.loc 1 231 31 is_stmt 0 view .LVU25
  85 003e 8DF80F40 		strb	r4, [sp, #15]
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
  86              		.loc 1 233 3 is_stmt 1 view .LVU26
  87 0042 6846     		mov	r0, sp
  88 0044 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
  89              	.LVL1:
 234:Core/Src/main.c ****   /* Enables the MPU */
 235:Core/Src/main.c ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
  90              		.loc 1 235 3 view .LVU27
  91 0048 0420     		movs	r0, #4
  92 004a FFF7FEFF 		bl	HAL_MPU_Enable
  93              	.LVL2:
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** }
  94              		.loc 1 237 1 is_stmt 0 view .LVU28
  95 004e 05B0     		add	sp, sp, #20
  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 12
  98              		@ sp needed
  99 0050 30BD     		pop	{r4, r5, pc}
 100              		.cfi_endproc
 101              	.LFE154:
 103              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 104              		.align	1
 105              		.global	HAL_TIM_PeriodElapsedCallback
 106              		.syntax unified
 107              		.thumb
ARM GAS  /tmp/cc1SHIiy.s 			page 7


 108              		.thumb_func
 110              	HAL_TIM_PeriodElapsedCallback:
 111              	.LVL3:
 112              	.LFB155:
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /**
 240:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 241:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 242:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 243:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 244:Core/Src/main.c ****   * @param  htim : TIM handle
 245:Core/Src/main.c ****   * @retval None
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 248:Core/Src/main.c **** {
 113              		.loc 1 248 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		.loc 1 248 1 is_stmt 0 view .LVU30
 118 0000 08B5     		push	{r3, lr}
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 3, -8
 122              		.cfi_offset 14, -4
 249:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 252:Core/Src/main.c ****   if (htim->Instance == TIM1)
 123              		.loc 1 252 3 is_stmt 1 view .LVU31
 124              		.loc 1 252 11 is_stmt 0 view .LVU32
 125 0002 0268     		ldr	r2, [r0]
 126              		.loc 1 252 6 view .LVU33
 127 0004 034B     		ldr	r3, .L7
 128 0006 9A42     		cmp	r2, r3
 129 0008 00D0     		beq	.L6
 130              	.LVL4:
 131              	.L3:
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     HAL_IncTick();
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 259:Core/Src/main.c **** }
 132              		.loc 1 259 1 view .LVU34
 133 000a 08BD     		pop	{r3, pc}
 134              	.LVL5:
 135              	.L6:
 254:Core/Src/main.c ****   }
 136              		.loc 1 254 5 is_stmt 1 view .LVU35
 137 000c FFF7FEFF 		bl	HAL_IncTick
 138              	.LVL6:
 139              		.loc 1 259 1 is_stmt 0 view .LVU36
 140 0010 FBE7     		b	.L3
 141              	.L8:
 142 0012 00BF     		.align	2
ARM GAS  /tmp/cc1SHIiy.s 			page 8


 143              	.L7:
 144 0014 00000140 		.word	1073807360
 145              		.cfi_endproc
 146              	.LFE155:
 148              		.section	.text.Error_Handler,"ax",%progbits
 149              		.align	1
 150              		.global	Error_Handler
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	Error_Handler:
 156              	.LFB156:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /**
 262:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 263:Core/Src/main.c ****   * @retval None
 264:Core/Src/main.c ****   */
 265:Core/Src/main.c **** void Error_Handler(void)
 266:Core/Src/main.c **** {
 157              		.loc 1 266 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ Volatile: function does not return.
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 267:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 268:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 269:Core/Src/main.c ****   __disable_irq();
 163              		.loc 1 269 3 view .LVU38
 164              	.LBB4:
 165              	.LBI4:
 166              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  /tmp/cc1SHIiy.s 			page 9


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  /tmp/cc1SHIiy.s 			page 10


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
ARM GAS  /tmp/cc1SHIiy.s 			page 11


 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  /tmp/cc1SHIiy.s 			page 12


 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 167              		.loc 2 207 27 view .LVU39
 168              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 169              		.loc 2 209 3 view .LVU40
 170              		.syntax unified
 171              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 172 0000 72B6     		cpsid i
 173              	@ 0 "" 2
 174              		.thumb
 175              		.syntax unified
 176              	.L10:
 177              	.LBE5:
 178              	.LBE4:
 270:Core/Src/main.c ****   while (1)
 179              		.loc 1 270 3 view .LVU41
 271:Core/Src/main.c ****   {
 272:Core/Src/main.c ****   }
 180              		.loc 1 272 3 view .LVU42
 270:Core/Src/main.c ****   while (1)
 181              		.loc 1 270 9 view .LVU43
 182 0002 FEE7     		b	.L10
 183              		.cfi_endproc
 184              	.LFE156:
 186              		.section	.text.SystemClock_Config,"ax",%progbits
 187              		.align	1
 188              		.global	SystemClock_Config
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	SystemClock_Config:
 194              	.LFB153:
 149:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 195              		.loc 1 149 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 112
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 00B5     		push	{lr}
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 14, -4
 203 0002 9DB0     		sub	sp, sp, #116
 204              	.LCFI5:
 205              		.cfi_def_cfa_offset 120
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 206              		.loc 1 150 3 view .LVU45
ARM GAS  /tmp/cc1SHIiy.s 			page 13


 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 207              		.loc 1 150 22 is_stmt 0 view .LVU46
 208 0004 4C22     		movs	r2, #76
 209 0006 0021     		movs	r1, #0
 210 0008 09A8     		add	r0, sp, #36
 211 000a FFF7FEFF 		bl	memset
 212              	.LVL7:
 151:Core/Src/main.c **** 
 213              		.loc 1 151 3 is_stmt 1 view .LVU47
 151:Core/Src/main.c **** 
 214              		.loc 1 151 22 is_stmt 0 view .LVU48
 215 000e 2022     		movs	r2, #32
 216 0010 0021     		movs	r1, #0
 217 0012 01A8     		add	r0, sp, #4
 218 0014 FFF7FEFF 		bl	memset
 219              	.LVL8:
 154:Core/Src/main.c **** 
 220              		.loc 1 154 3 is_stmt 1 view .LVU49
 154:Core/Src/main.c **** 
 221              		.loc 1 154 16 is_stmt 0 view .LVU50
 222 0018 244B     		ldr	r3, .L18
 223 001a 254A     		ldr	r2, .L18+4
 224 001c C3F8B020 		str	r2, [r3, #176]
 158:Core/Src/main.c **** 
 225              		.loc 1 158 3 is_stmt 1 view .LVU51
 226 0020 0420     		movs	r0, #4
 227 0022 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 228              	.LVL9:
 162:Core/Src/main.c **** 
 229              		.loc 1 162 3 view .LVU52
 230              	.LBB6:
 162:Core/Src/main.c **** 
 231              		.loc 1 162 3 view .LVU53
 232 0026 0023     		movs	r3, #0
 233 0028 0093     		str	r3, [sp]
 162:Core/Src/main.c **** 
 234              		.loc 1 162 3 view .LVU54
 235 002a 224B     		ldr	r3, .L18+8
 236 002c 9A69     		ldr	r2, [r3, #24]
 237 002e 42F44042 		orr	r2, r2, #49152
 238 0032 9A61     		str	r2, [r3, #24]
 162:Core/Src/main.c **** 
 239              		.loc 1 162 3 view .LVU55
 240 0034 9B69     		ldr	r3, [r3, #24]
 241 0036 03F44043 		and	r3, r3, #49152
 242 003a 0093     		str	r3, [sp]
 162:Core/Src/main.c **** 
 243              		.loc 1 162 3 view .LVU56
 244 003c 009B     		ldr	r3, [sp]
 245              	.LBE6:
 162:Core/Src/main.c **** 
 246              		.loc 1 162 3 view .LVU57
 164:Core/Src/main.c **** 
 247              		.loc 1 164 3 view .LVU58
 248              	.L12:
 164:Core/Src/main.c **** 
 249              		.loc 1 164 48 discriminator 1 view .LVU59
ARM GAS  /tmp/cc1SHIiy.s 			page 14


 164:Core/Src/main.c **** 
 250              		.loc 1 164 9 discriminator 1 view .LVU60
 164:Core/Src/main.c **** 
 251              		.loc 1 164 10 is_stmt 0 discriminator 1 view .LVU61
 252 003e 1D4B     		ldr	r3, .L18+8
 253 0040 9B69     		ldr	r3, [r3, #24]
 164:Core/Src/main.c **** 
 254              		.loc 1 164 9 discriminator 1 view .LVU62
 255 0042 13F4005F 		tst	r3, #8192
 256 0046 FAD0     		beq	.L12
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 257              		.loc 1 169 3 is_stmt 1 view .LVU63
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 258              		.loc 1 169 36 is_stmt 0 view .LVU64
 259 0048 0223     		movs	r3, #2
 260 004a 0993     		str	r3, [sp, #36]
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 261              		.loc 1 170 3 is_stmt 1 view .LVU65
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 262              		.loc 1 170 30 is_stmt 0 view .LVU66
 263 004c 0122     		movs	r2, #1
 264 004e 0C92     		str	r2, [sp, #48]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 265              		.loc 1 171 3 is_stmt 1 view .LVU67
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 266              		.loc 1 171 41 is_stmt 0 view .LVU68
 267 0050 4022     		movs	r2, #64
 268 0052 0D92     		str	r2, [sp, #52]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 269              		.loc 1 172 3 is_stmt 1 view .LVU69
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 270              		.loc 1 172 34 is_stmt 0 view .LVU70
 271 0054 1293     		str	r3, [sp, #72]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 272              		.loc 1 173 3 is_stmt 1 view .LVU71
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 273              		.loc 1 173 35 is_stmt 0 view .LVU72
 274 0056 0022     		movs	r2, #0
 275 0058 1392     		str	r2, [sp, #76]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 35;
 276              		.loc 1 174 3 is_stmt 1 view .LVU73
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 35;
 277              		.loc 1 174 30 is_stmt 0 view .LVU74
 278 005a 0421     		movs	r1, #4
 279 005c 1491     		str	r1, [sp, #80]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 280              		.loc 1 175 3 is_stmt 1 view .LVU75
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 281              		.loc 1 175 30 is_stmt 0 view .LVU76
 282 005e 2320     		movs	r0, #35
 283 0060 1590     		str	r0, [sp, #84]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 284              		.loc 1 176 3 is_stmt 1 view .LVU77
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 285              		.loc 1 176 30 is_stmt 0 view .LVU78
 286 0062 1693     		str	r3, [sp, #88]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
ARM GAS  /tmp/cc1SHIiy.s 			page 15


 287              		.loc 1 177 3 is_stmt 1 view .LVU79
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 288              		.loc 1 177 30 is_stmt 0 view .LVU80
 289 0064 1791     		str	r1, [sp, #92]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 290              		.loc 1 178 3 is_stmt 1 view .LVU81
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 291              		.loc 1 178 30 is_stmt 0 view .LVU82
 292 0066 1893     		str	r3, [sp, #96]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 293              		.loc 1 179 3 is_stmt 1 view .LVU83
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 294              		.loc 1 179 32 is_stmt 0 view .LVU84
 295 0068 0C23     		movs	r3, #12
 296 006a 1993     		str	r3, [sp, #100]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 297              		.loc 1 180 3 is_stmt 1 view .LVU85
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 298              		.loc 1 180 35 is_stmt 0 view .LVU86
 299 006c 1A92     		str	r2, [sp, #104]
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 300              		.loc 1 181 3 is_stmt 1 view .LVU87
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 301              		.loc 1 181 34 is_stmt 0 view .LVU88
 302 006e 1B92     		str	r2, [sp, #108]
 182:Core/Src/main.c ****   {
 303              		.loc 1 182 3 is_stmt 1 view .LVU89
 182:Core/Src/main.c ****   {
 304              		.loc 1 182 7 is_stmt 0 view .LVU90
 305 0070 09A8     		add	r0, sp, #36
 306 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 307              	.LVL10:
 182:Core/Src/main.c ****   {
 308              		.loc 1 182 6 discriminator 1 view .LVU91
 309 0076 A8B9     		cbnz	r0, .L16
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 310              		.loc 1 189 3 is_stmt 1 view .LVU92
 189:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 311              		.loc 1 189 31 is_stmt 0 view .LVU93
 312 0078 3F23     		movs	r3, #63
 313 007a 0193     		str	r3, [sp, #4]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 314              		.loc 1 192 3 is_stmt 1 view .LVU94
 192:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 315              		.loc 1 192 34 is_stmt 0 view .LVU95
 316 007c 0323     		movs	r3, #3
 317 007e 0293     		str	r3, [sp, #8]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 318              		.loc 1 193 3 is_stmt 1 view .LVU96
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 319              		.loc 1 193 35 is_stmt 0 view .LVU97
 320 0080 0023     		movs	r3, #0
 321 0082 0393     		str	r3, [sp, #12]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 322              		.loc 1 194 3 is_stmt 1 view .LVU98
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 323              		.loc 1 194 35 is_stmt 0 view .LVU99
ARM GAS  /tmp/cc1SHIiy.s 			page 16


 324 0084 0493     		str	r3, [sp, #16]
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 325              		.loc 1 195 3 is_stmt 1 view .LVU100
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 326              		.loc 1 195 36 is_stmt 0 view .LVU101
 327 0086 4023     		movs	r3, #64
 328 0088 0593     		str	r3, [sp, #20]
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 329              		.loc 1 196 3 is_stmt 1 view .LVU102
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 330              		.loc 1 196 36 is_stmt 0 view .LVU103
 331 008a 0693     		str	r3, [sp, #24]
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 332              		.loc 1 197 3 is_stmt 1 view .LVU104
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 333              		.loc 1 197 36 is_stmt 0 view .LVU105
 334 008c 4FF48062 		mov	r2, #1024
 335 0090 0792     		str	r2, [sp, #28]
 198:Core/Src/main.c **** 
 336              		.loc 1 198 3 is_stmt 1 view .LVU106
 198:Core/Src/main.c **** 
 337              		.loc 1 198 36 is_stmt 0 view .LVU107
 338 0092 0893     		str	r3, [sp, #32]
 200:Core/Src/main.c ****   {
 339              		.loc 1 200 3 is_stmt 1 view .LVU108
 200:Core/Src/main.c ****   {
 340              		.loc 1 200 7 is_stmt 0 view .LVU109
 341 0094 0621     		movs	r1, #6
 342 0096 01A8     		add	r0, sp, #4
 343 0098 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 344              	.LVL11:
 200:Core/Src/main.c ****   {
 345              		.loc 1 200 6 discriminator 1 view .LVU110
 346 009c 20B9     		cbnz	r0, .L17
 204:Core/Src/main.c **** 
 347              		.loc 1 204 1 view .LVU111
 348 009e 1DB0     		add	sp, sp, #116
 349              	.LCFI6:
 350              		.cfi_remember_state
 351              		.cfi_def_cfa_offset 4
 352              		@ sp needed
 353 00a0 5DF804FB 		ldr	pc, [sp], #4
 354              	.L16:
 355              	.LCFI7:
 356              		.cfi_restore_state
 184:Core/Src/main.c ****   }
 357              		.loc 1 184 5 is_stmt 1 view .LVU112
 358 00a4 FFF7FEFF 		bl	Error_Handler
 359              	.LVL12:
 360              	.L17:
 202:Core/Src/main.c ****   }
 361              		.loc 1 202 5 view .LVU113
 362 00a8 FFF7FEFF 		bl	Error_Handler
 363              	.LVL13:
 364              	.L19:
 365              		.align	2
 366              	.L18:
ARM GAS  /tmp/cc1SHIiy.s 			page 17


 367 00ac 00440258 		.word	1476543488
 368 00b0 FFFF03E0 		.word	-536608769
 369 00b4 00480258 		.word	1476544512
 370              		.cfi_endproc
 371              	.LFE153:
 373              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 374              		.align	2
 375              	.LC0:
 376 0000 53746172 		.ascii	"Starting the freertos program.....\012\000"
 376      74696E67 
 376      20746865 
 376      20667265 
 376      6572746F 
 377              		.section	.text.main,"ax",%progbits
 378              		.align	1
 379              		.global	main
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	main:
 385              	.LFB152:
  72:Core/Src/main.c **** 
 386              		.loc 1 72 1 view -0
 387              		.cfi_startproc
 388              		@ Volatile: function does not return.
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391 0000 08B5     		push	{r3, lr}
 392              	.LCFI8:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 3, -8
 395              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 
 396              		.loc 1 79 3 view .LVU115
 397 0002 FFF7FEFF 		bl	MPU_Config
 398              	.LVL14:
  84:Core/Src/main.c **** 
 399              		.loc 1 84 3 view .LVU116
 400 0006 FFF7FEFF 		bl	HAL_Init
 401              	.LVL15:
  91:Core/Src/main.c **** 
 402              		.loc 1 91 3 view .LVU117
 403 000a FFF7FEFF 		bl	SystemClock_Config
 404              	.LVL16:
  98:Core/Src/main.c ****   MX_USART1_UART_Init();
 405              		.loc 1 98 3 view .LVU118
 406 000e FFF7FEFF 		bl	MX_GPIO_Init
 407              	.LVL17:
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 408              		.loc 1 99 3 view .LVU119
 409 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 410              	.LVL18:
 101:Core/Src/main.c **** 
 411              		.loc 1 101 5 view .LVU120
 412 0016 1148     		ldr	r0, .L24
 413 0018 FFF7FEFF 		bl	myprintf
 414              	.LVL19:
ARM GAS  /tmp/cc1SHIiy.s 			page 18


 106:Core/Src/main.c **** 
 415              		.loc 1 106 3 view .LVU121
 416 001c FFF7FEFF 		bl	MX_FREERTOS_Init
 417              	.LVL20:
 109:Core/Src/main.c ****   BSP_LED_Init(LED_YELLOW);
 418              		.loc 1 109 3 view .LVU122
 419 0020 0020     		movs	r0, #0
 420 0022 FFF7FEFF 		bl	BSP_LED_Init
 421              	.LVL21:
 110:Core/Src/main.c ****   BSP_LED_Init(LED_RED);
 422              		.loc 1 110 3 view .LVU123
 423 0026 0120     		movs	r0, #1
 424 0028 FFF7FEFF 		bl	BSP_LED_Init
 425              	.LVL22:
 111:Core/Src/main.c **** 
 426              		.loc 1 111 3 view .LVU124
 427 002c 0220     		movs	r0, #2
 428 002e FFF7FEFF 		bl	BSP_LED_Init
 429              	.LVL23:
 114:Core/Src/main.c **** 
 430              		.loc 1 114 3 view .LVU125
 431 0032 0121     		movs	r1, #1
 432 0034 0020     		movs	r0, #0
 433 0036 FFF7FEFF 		bl	BSP_PB_Init
 434              	.LVL24:
 117:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 435              		.loc 1 117 3 view .LVU126
 117:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 436              		.loc 1 117 25 is_stmt 0 view .LVU127
 437 003a 0949     		ldr	r1, .L24+4
 438 003c 4FF4E133 		mov	r3, #115200
 439 0040 0B60     		str	r3, [r1]
 118:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 440              		.loc 1 118 3 is_stmt 1 view .LVU128
 118:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 441              		.loc 1 118 25 is_stmt 0 view .LVU129
 442 0042 0020     		movs	r0, #0
 443 0044 4860     		str	r0, [r1, #4]
 119:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 444              		.loc 1 119 3 is_stmt 1 view .LVU130
 119:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 445              		.loc 1 119 25 is_stmt 0 view .LVU131
 446 0046 0881     		strh	r0, [r1, #8]	@ movhi
 120:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 447              		.loc 1 120 3 is_stmt 1 view .LVU132
 120:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 448              		.loc 1 120 25 is_stmt 0 view .LVU133
 449 0048 4881     		strh	r0, [r1, #10]	@ movhi
 121:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 450              		.loc 1 121 3 is_stmt 1 view .LVU134
 121:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 451              		.loc 1 121 25 is_stmt 0 view .LVU135
 452 004a 8881     		strh	r0, [r1, #12]	@ movhi
 122:Core/Src/main.c ****   {
 453              		.loc 1 122 3 is_stmt 1 view .LVU136
 122:Core/Src/main.c ****   {
 454              		.loc 1 122 7 is_stmt 0 view .LVU137
ARM GAS  /tmp/cc1SHIiy.s 			page 19


 455 004c FFF7FEFF 		bl	BSP_COM_Init
 456              	.LVL25:
 122:Core/Src/main.c ****   {
 457              		.loc 1 122 6 discriminator 1 view .LVU138
 458 0050 08B1     		cbz	r0, .L21
 124:Core/Src/main.c ****   }
 459              		.loc 1 124 5 is_stmt 1 view .LVU139
 460 0052 FFF7FEFF 		bl	Error_Handler
 461              	.LVL26:
 462              	.L21:
 128:Core/Src/main.c **** 
 463              		.loc 1 128 3 view .LVU140
 464 0056 FFF7FEFF 		bl	osKernelStart
 465              	.LVL27:
 466              	.L22:
 134:Core/Src/main.c ****   {
 467              		.loc 1 134 3 view .LVU141
 140:Core/Src/main.c ****   /* USER CODE END 3 */
 468              		.loc 1 140 3 view .LVU142
 134:Core/Src/main.c ****   {
 469              		.loc 1 134 9 view .LVU143
 470 005a FEE7     		b	.L22
 471              	.L25:
 472              		.align	2
 473              	.L24:
 474 005c 00000000 		.word	.LC0
 475 0060 00000000 		.word	BspCOMInit
 476              		.cfi_endproc
 477              	.LFE152:
 479              		.global	BspCOMInit
 480              		.section	.bss.BspCOMInit,"aw",%nobits
 481              		.align	2
 484              	BspCOMInit:
 485 0000 00000000 		.space	16
 485      00000000 
 485      00000000 
 485      00000000 
 486              		.text
 487              	.Letext0:
 488              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 489              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 490              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7a3xxq.h"
 491              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 492              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 493              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 494              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 495              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 496              		.file 11 "Drivers/BSP/STM32H7xx_Nucleo/stm32h7xx_nucleo.h"
 497              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 498              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 499              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 500              		.file 15 "Core/Inc/usart.h"
 501              		.file 16 "Core/Inc/gpio.h"
 502              		.file 17 "<built-in>"
ARM GAS  /tmp/cc1SHIiy.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc1SHIiy.s:20     .text.MPU_Config:00000000 $t
     /tmp/cc1SHIiy.s:25     .text.MPU_Config:00000000 MPU_Config
     /tmp/cc1SHIiy.s:104    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/cc1SHIiy.s:110    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc1SHIiy.s:144    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
     /tmp/cc1SHIiy.s:149    .text.Error_Handler:00000000 $t
     /tmp/cc1SHIiy.s:155    .text.Error_Handler:00000000 Error_Handler
     /tmp/cc1SHIiy.s:187    .text.SystemClock_Config:00000000 $t
     /tmp/cc1SHIiy.s:193    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc1SHIiy.s:367    .text.SystemClock_Config:000000ac $d
     /tmp/cc1SHIiy.s:374    .rodata.main.str1.4:00000000 $d
     /tmp/cc1SHIiy.s:378    .text.main:00000000 $t
     /tmp/cc1SHIiy.s:384    .text.main:00000000 main
     /tmp/cc1SHIiy.s:474    .text.main:0000005c $d
     /tmp/cc1SHIiy.s:484    .bss.BspCOMInit:00000000 BspCOMInit
     /tmp/cc1SHIiy.s:481    .bss.BspCOMInit:00000000 $d

UNDEFINED SYMBOLS
HAL_MPU_Disable
HAL_MPU_ConfigRegion
HAL_MPU_Enable
HAL_IncTick
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
myprintf
MX_FREERTOS_Init
BSP_LED_Init
BSP_PB_Init
BSP_COM_Init
osKernelStart
